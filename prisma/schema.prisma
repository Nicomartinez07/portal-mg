generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}
model Customer {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String
  phone     String
  address   String
  state     String
  city      String
  orders    Order[]
  warranties Warranty[]  // <-- relaciÃ³n inversa agregada
}

model Company {
  id          Int          @id @default(autoincrement())
  name        String
  address     String
  state       String
  city        String?
  phone1      String?
  phone2      String?
  email       String?
  companyType String
  users       User[]
  parts       Part[]
  warranties  Warranty[]
  orders      Order[]
}

model User {
  id        Int          @id @default(autoincrement())
  username      String
  email     String       @unique
  password  String
  companyId Int
  company   Company      @relation(fields: [companyId], references: [id])
  roles     UserRole[]
  notifications Boolean  @default(false)
  warranties Warranty[]
  orders    Order[]
}

model Role {
  id       Int           @id @default(autoincrement())
  name     String        @unique
  users    UserRole[]
}

model UserRole {
  userId Int
  roleId Int
  user   User @relation(fields: [userId], references: [id])
  role   Role @relation(fields: [roleId], references: [id])
  @@id([userId, roleId])
}

model Vehicle {
  id               Int        @id @default(autoincrement())
  date             DateTime
  vin              String     @unique
  brand            String
  model            String
  engineNumber     String?
  type             String?
  year             Int?
  certificateNumber String     @unique
  saleDate         DateTime?
  importDate       DateTime?
  licensePlate     String
  warranty         Warranty?
  orders           Order[]
}

model PartContact {
  id         Int        @id @default(autoincrement())
  contactName String
  address    String?
  state      String?
  city       String?
  phone1     String?
  phone2     String?
  email      String?
  parts      Part[]
}

model Part {
  id           Int              @id @default(autoincrement())
  loadDate     DateTime?
  companyId    Int
  company      Company          @relation(fields: [companyId], references: [id])
  code         String           @unique
  description  String
  model        String?
  stock        Int?
  salePrice    Float?
  contactId    Int
  contact      PartContact      @relation(fields: [contactId], references: [id])
}

model Warranty {
  id              Int      @id @default(autoincrement())
  activationDate  DateTime
  vehicleVin      String   @unique
  vehicle         Vehicle  @relation(fields: [vehicleVin], references: [vin])
  companyId       Int
  company         Company  @relation(fields: [companyId], references: [id])
  userId          Int
  user            User     @relation(fields: [userId], references: [id])
  customerId Int
  customer   Customer @relation(fields: [customerId], references: [id])
}

model Order {
  id                        Int      @id @default(autoincrement())
  creationDate              DateTime
  customerId                Int
  customer                  Customer  @relation(fields: [customerId], references: [id])
  vehicleVin                String
  vehicle                   Vehicle @relation(fields: [vehicleVin], references: [vin])
  companyId                 Int
  company                   Company  @relation(fields: [companyId], references: [id])
  userId                    Int
  user                      User  @relation(fields: [userId], references: [id])
  status                    String
  internalStatus            String?
  actualMileage             Int
  diagnosis                 String?
  additionalObservations    String?
  tasks                     String
  hoursCount                Int
  parts                     String
  partsDescription          String?
  licensePlatePhotoUrl      String?
  vinPlatePhotoUrl          String?
  odometerPhotoUrl          String?
  additionalPartsPhotoUrl   String?
  customerSignedPhotoUrl    String?
  orderReceiptPhotoUrl      String?
}